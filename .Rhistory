#~# Number of species with evidence per order
Evidence <- Impacts.nonDD %>%
distinct(scientificName = scientificName, .keep_all = T) %>%
group_by(Order) %>%
summarise(length(scientificName))
#~# Number of species per order vs number of species assessed vs those with evidence
species_assessed <- full_join(Alien_orders, Orders, by = "Order") %>%
mutate(Counts.x = replace_na(Counts.x,0)) %>%
mutate(Counts.y = replace_na(Counts.y,0))
species_assessed <- left_join(species_assessed, Orders_noNA, by = "Order") %>%
dplyr::mutate(Counts = replace_na(Counts,0))
species_assessed <- left_join(species_assessed, Evidence, by = "Order") %>%
rename(Evidence = "length(scientificName)") %>%
rename(Assessed = "Counts.y") %>%
rename(GRIIS = "Counts.x") %>%
rename(Assessed_noNA = "Counts") %>%
mutate(Evidence = replace_na(Evidence, 0)) %>%
mutate(DataDeficient = Assessed_noNA - Evidence) %>%
mutate(NotDD = round(Evidence/Assessed_noNA, 2)) %>%
mutate(DD = round(1 - NotDD, 2))
#~# Only including orders with assessed (and no NA) species
species_assessed_min <- species_assessed %>%
filter(Assessed_noNA > 0) %>%
dplyr::select(-GRIIS)
#For plot (test)
DDvsNonDD <- species_assessed_min %>%
dplyr::select(Order, DD, NotDD) %>%
mutate(DD = DD * -1) %>%
gather("Status", "Proportion", -Order) %>%
arrange(Proportion)
#~# Number of studies per species
Studies <- Impacts.nonDD %>%
group_by(Order, scientificName) %>%
distinct(PubID = PubID, .keep_all = T) %>%
summarise(length(PubID)) %>%
rename(Counts = "length(PubID)")
m <- polr(Severity ~ AlienCountries, data = MaxSev_range, Hess = TRUE)
#library(ggalluvial)
library(MASS)
m <- polr(Severity ~ AlienCountries, data = MaxSev_range, Hess = TRUE)
newdat <- data.frame(AlienCountries = seq(from = 1, to = 125))
newdat <- cbind(newdat, predict(m, newdat, type = "probs"))
head(newdat)
lnewdat <- reshape2::melt(newdat, id.vars = c("AlienCountries"),
variable.name = "Level", value.name="Probability")
head(lnewdat)
summary(m)
ctable <- coef(summary(m))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
ctable <- cbind(ctable, "p value" = p)
ci <- confint(m)
ctable
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
tpl_palettes
ggplot(MaxSev_range, aes(x = Severity, y = AlienCountries)) +
geom_boxplot(col = Severity) +
geom_jitter() +
scale_y_log10() +
coord_flip()+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
ylab("Number of countries with alien populations(log10)")
ggplot(MaxSev_range, aes(x = Severity, y = AlienCountries)) +
geom_boxplot(col = "Severity") +
geom_jitter() +
scale_y_log10() +
coord_flip()+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
ylab("Number of countries with alien populations(log10)")
ggplot(MaxSev_range, aes(x = Severity, y = AlienCountries)) +
geom_boxplot(aes(colour = Severity)) +
geom_jitter() +
scale_y_log10() +
coord_flip()+
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14)) +
ylab("Number of countries with alien populations(log10)")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major"),
palette = "categorical") +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability)) +
geom_line(aes(colour = Level)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major"),
palette = "categorical") +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability)) +
geom_line(aes(colour = Level)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
#Predicting maximum severity from how widespread a species is
my_cols <- c("darkorchid4", "dodgerblue4", "aquamarine4", "goldenrod3")
my_cols <- c("darkorchid4", "dodgerblue4", "aquamarine4", "goldenrod3")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability)) +
geom_line(aes(colour = my_cols)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
my_cols <- c("darkorchid4", "dodgerblue4", "aquamarine4", "goldenrod3")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line(aes(colour = my_cols)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
my_cols <- c("darkorchid4", "dodgerblue4", "aquamarine4", "goldenrod3")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major"),
pallette = my_cols) +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major"),
palette = my_cols) +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major"),
palette = "my_cols") +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line(aes(colour = "my_cols")) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line(aes(fill = "my_cols")) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability)) +
geom_line(aes(colour = "my_cols")) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability)) +
geom_line(aes(colour = my_cols)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
#Predicting maximum severity from how widespread a species is
my_cols <- c("darkorchid4", "dodgerblue4", "aquamarine4", "goldenrod3")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability)) +
geom_line(aes(colour = my_cols)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability)) +
geom_line(aes(colour = "darkorchid4", "dodgerblue4", "aquamarine4", "goldenrod3")) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability)) +
geom_line(aes(colour = c("darkorchid4", "dodgerblue4", "aquamarine4", "goldenrod3"))) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line(colour = my_cols) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_discrete(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major")) +
xlab("Number of countries with alien populations")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_manual(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major"),
values = my_cols) +
xlab("Number of countries with alien populations")
my_cols <- c("darkorchid4", "dodgerblue4", "aquamarine4", "yellow1")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_manual(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major"),
values = my_cols) +
xlab("Number of countries with alien populations")
my_cols <- c("darkorchid4", "dodgerblue4", "aquamarine4", "yellow2")
ggplot(lnewdat, aes(x = AlienCountries, y = Probability, colour = Level)) +
geom_line() +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)) +
scale_color_manual(name = "Impact\nSeverity",
labels = c("Minimal Concern", "Minor", "Moderate", "Major"),
values = my_cols) +
xlab("Number of countries with alien populations")
library(tidyverse)
library(janitor)
library(sf)
library(readxl)
library(tmap)
Insect_Distribution <- read_excel(file.path("Data","Alien_insect_distribution.xlsx"), sheet = "Insect_distribution")
load(file.path("Data","lvl_0.RData"))
#Convert shapefile to sf object
lvl_0_sf <- st_as_sf(lvl_0)
rm(lvl_0)
head(Insect_Distribution)
head(Insect_Distribution$dwc.Taxon)
yca_dist <- Insect_Distribution %>% filter(dwc.Taxon == "Anoplolepis gracilipes")
Insect_Distribution_min <- Insect_Distribution %>%
dplyr::select(dwc.order, dwc.family, dwc.Taxon, ISO3, ISO3.Country) %>%
mutate(dwc.order = stringr::str_replace(dwc.order, "Coccoidea", "Hemiptera")) %>%
mutate(dwc.order = stringr::str_replace(dwc.order, "Coccoidea", "Hemiptera")) %>%
mutate(dwc.order = stringr::str_replace(dwc.order, "Homoptera", "Hemiptera")) %>%
mutate(dwc.order = stringr::str_replace(dwc.order, "Rhynchota", "Hemiptera")) %>%
mutate(dwc.order = stringr::str_replace(dwc.order, "Sternorrhyncha", "Hemiptera")) %>%
mutate(dwc.order = stringr::str_replace(dwc.order, "Phasmida", "Phasmatodea")) %>%
mutate(dwc.order = stringr::str_replace(dwc.order, "Psocoptera", "Psocodea")) %>%
mutate(dwc.order = stringr::str_replace(dwc.order, "Dictyoptera", "Blattodea")) %>%
mutate(dwc.order = as.factor(dwc.order)) %>%
mutate(ISO3.Country = as.factor(ISO3.Country))
yca_dist <- Insect_Distribution_min %>% filter(dwc.Taxon == "Anoplolepis gracilipes")
Alien_yca_dist <- left_join(lvl_0_sf, yca_dist, by = "GID_0")
yca_dist <- Insect_Distribution_min %>% filter(dwc.Taxon == "Anoplolepis gracilipes") %>% rename(GID_0 = "ISO3")
Alien_yca_dist <- left_join(lvl_0_sf, yca_dist, by = "GID_0")
Alien_yca_dist <- Alien_yca_dist %>%
dplyr::mutate(Richness = replace_na(Richness,0))
head(Alien_yca_dist)
tmap_mode("plot")
lvl_0_sf_NA <- lvl_0_sf[-12]
plot(lvl_0_sf_NA)
lvl_0_sf[12,]
lvl_0_sf_NA <- lvl_0_sf[-12,]
lvl_0_sf_NA[12,]
plot(lvl_0_sf_NA$geometry)
tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_bubbles(size = "GID_0", col = "yellow")
tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_bubbles(size = 6, col = "yellow")
tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_symbols(size = 3, col = "yellow", shape = "GID_0")
Alien_yca_dist <- right_join(lvl_0_sf, yca_dist, by = "GID_0")
tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_bubbles(size = 3, col = "yellow")
tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_bubbles(size = 1, col = "yellow")
yca_dist <- tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_bubbles(size = 1, col = "yellow")
tmap_save(yca_dist, "Outcome/PDF/yca_dist.pdf", width = 1920, height = 1080, asp = 0)
tmap_save(yca_dist, "Outcome/JPG/yca_dist2.jpg", width = 1920, height = 1080, asp = 0)
yca_dist <- tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_symbols(size = 1, col = "yellow", shape = 22)
yca_dist
tm_shape(lvl_0_sf_NA) +
+     tm_fill("white") +
+     tm_borders("lightgrey", lwd = 0.5) +
+     tm_shape(Alien_yca_dist) +
+     tm_symbols(size = 1, col = "yellow", shape = 23)
tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_symbols(size = 1, col = "yellow", shape = 23)
tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_symbols(size = 1, col = "yellow", shape = 21)
yca_dist <- tm_shape(lvl_0_sf_NA) +
tm_fill("white") +
tm_borders("lightgrey", lwd = 0.5) +
tm_shape(Alien_yca_dist) +
tm_symbols(size = 1, col = "yellow", shape = 21)
tmap_save(yca_dist, "Outcome/PDF/yca_dist.pdf", width = 1920, height = 1080, asp = 0)
install.packages(c("ggpol", "ggpubr", "janitor", "rms"))
