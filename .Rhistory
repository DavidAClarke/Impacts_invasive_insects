indMCA
fviz_mca_ind(minsetMCA,
label = "none", # hide individual labels
habillage = "Confidence", # color by groups
palette = c("#00AFBB", "#E7B800","#FC4E07"),
addEllipses = TRUE, ellipse.type = "confidence", #confidence ellipse around mean point
ggtheme = theme_minimal(),
title = "")
?fviz_mca_ind
minsetMCA
minsetMCA$var$coord
minset$Confidence
fviz_mca_ind(minsetMCA,
label = "none", # hide individual labels
habillage = minset$Confidence, # color by groups
palette = c("#00AFBB", "#E7B800","#FC4E07"),
addEllipses = TRUE, ellipse.type = "confidence", #confidence ellipse around mean point
ggtheme = theme_minimal(),
title = "")
is.factor(minset$Confidence)
fviz_mca_ind(minsetMCA,
label = "none", # hide individual labels
habillage = minset$Confidence, # color by groups
palette = c("#00AFBB", "#E7B800","#FC4E07"),
addEllipses = F, ellipse.type = "confidence", #confidence ellipse around mean point
ggtheme = theme_minimal(),
title = "")
glm(Number ~ factor(Order) + factor(Assessed), data = Order_assessed, family = poisson)
##log-linear analysis
Order_assessed <- species_assessed_min %>%
dplyr::select(Order, Evidence, DataDeficient) %>%
rename(NotDD = "Evidence") %>%
rename(DD = "DataDeficient") %>%
gather(key = "Assessed", value = "Number", -Order)
load(file.path("lvl_0.RData"))
file.path()
library(here)
load(here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts", "lvl_0.RData"))
load(here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts", "lvl_1.RData"))
load(here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts", "lvl_0.RData"))
lvl_0_sf <- st_as_sf(lvl_0)
lvl_0_sf <- st_transform(lvl_0_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_0)
lvl_1_sf <- st_as_sf(lvl_1)
lvl_1_sf <- st_transform(lvl_1_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_1)
source("R/2.data_preparation.R")
#Load required libraries and data
#~# Clears the environment
rm(list=ls())
#~# Load impact data
Pool <- read_excel(file.path("Data", "Species_pool.xlsx"),
sheet = "Pool")
Literature <- read_excel(file.path("Data", "Assessment_information.xlsx"),
sheet = "Literature_searches")
Impacts <- read_excel(file.path("Data", "Assessment_information.xlsx"),
sheet = "Assessment_results_input")
Impact_Distribution <- read_excel(file.path("Data", "Assessment_information.xlsx"),
sheet = "Impact_distribution")
Insect_Distribution <- read.csv(here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts","GRIIS - Country Compendium V1_0.csv")) %>%
filter(class == "Insecta")
load(here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts", "lvl_0.RData"))
load(here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts", "lvl_1.RData"))
lvl_0_sf <- st_as_sf(lvl_0)
lvl_0_sf <- st_transform(lvl_0_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_0)
lvl_1_sf <- st_as_sf(lvl_1)
lvl_1_sf <- st_transform(lvl_1_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_1)
source("R/2.data_preparation.R")
#Load required libraries and data
#~# Clears the environment
rm(list=ls())
p <- here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts/high-seas-master/geo-data/XYPorts_CM_Cruse_anchorage_world2_final.shp")
ports <- st_read(p)
ports_country <- ports %>%
group_by(ISO3166A3) %>%
summarise(length(LOCODE)) %>%
st_drop_geometry()
#~# Load impact data
Pool <- read_excel(file.path("Data", "Species_pool.xlsx"),
sheet = "Pool")
Literature <- read_excel(file.path("Data", "Assessment_information.xlsx"),
sheet = "Literature_searches")
Impacts <- read_excel(file.path("Data", "Assessment_information.xlsx"),
sheet = "Assessment_results_input")
Impact_Distribution <- read_excel(file.path("Data", "Assessment_information.xlsx"),
sheet = "Impact_distribution")
load(here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts", "lvl_0.RData"))
load(here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts", "lvl_1.RData"))
Insect_Distribution <- read.csv(here("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts","GRIIS - Country Compendium V1_0.csv")) %>%
filter(class == "Insecta")
lvl_0_sf <- st_as_sf(lvl_0)
lvl_0_sf <- st_transform(lvl_0_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_0)
lvl_1_sf <- st_as_sf(lvl_1)
lvl_1_sf <- st_transform(lvl_1_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_1)
source("R/2.data_preparation.R")
glm(Number ~ factor(Order) + factor(Assessed), data = Order_assessed, family = poisson)
##log-linear analysis
Order_assessed <- species_assessed_min %>%
dplyr::select(Order, Evidence, DataDeficient) %>%
rename(NotDD = "Evidence") %>%
rename(DD = "DataDeficient") %>%
gather(key = "Assessed", value = "Number", -Order)
glm(Number ~ factor(Order) + factor(Assessed), data = Order_assessed, family = poisson)
fit.1 <- glm(Number ~ factor(Order) * factor(Assessed), data = Order_assessed, family = poisson)
fit.2 <- glm(Number ~ factor(Order) + factor(Assessed), data = Order_assessed, family = poisson)
pchisq(deviance(fit.2), df = df.residual(fit.2), lower.tail = F)
summary(fit.2)
#reject the null that the cell frequencies satisfy the given loglinear model
anova(fit.2, test = "Chisq")
anova(fit.2, fit.1, test = "Chisq")
summary(fit.1)
summary(fit.2)
exp(-0.5235)
fit.2$coefficients
fit.2$coefficients[12]
fit.2$coefficients[19]
exp(fit.2$coefficients[19])
# the estimated odds ratio for any given taxonomic order having evidence of
# environmental impact, relative to being data deficient, was significant.
exp(fit.2$coefficients[19])
gc()
library(tidyverse)
library(janitor)
library(sf)
library(terra)
library(readxl)
library(tmap)
library(ggpol) #facet_share
library(ggpubr) #balloon plots
library(MASS)
library(PNWColors)
library(ncdf4)
library(lme4)
library(geepack)
library(rstatix)
library(coin)
library(DHARMa)
library(FactoMineR)
library(factoextra)
library(here)
########################################### Load data ###############################################
#~# Load impact data
Pool <- read_excel(here("Data", "Species_pool.xlsx"),
sheet = "Pool")
Literature <- read_excel(here("Data", "Assessment_information.xlsx"),
sheet = "Literature_searches")
Impacts <- read_excel(here("Data", "Assessment_information.xlsx"),
sheet = "Assessment_results_input")
Impact_Distribution <- read_excel(here("Data", "Assessment_information.xlsx"),
sheet = "Impact_distribution")
# Obtained from Global Register of Introduced and Invasive Species
#DOI: 10.5281/zenodo.63481164
Insect_Distribution <- read.csv(here("Data","GRIIS - Country Compendium V1_0.csv")) %>%
filter(class == "Insecta")
here()
# Obtained from Global Register of Introduced and Invasive Species
#DOI: 10.5281/zenodo.63481164
Insect_Distribution <- read.csv("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts/GRIIS - Country Compendium V1_0.csv") %>%
filter(class == "Insecta")
##Spatial data
#~# Load GADM level 0 shapefile (https://www.gadm.org)
load("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts/lvl_0.RData")
lvl_0_sf <- st_as_sf(lvl_0)
lvl_0_sf <- st_transform(lvl_0_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_0)
load("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts/lvl_1.RData")
#Convert shapefile to sf object
lvl_1_sf <- st_as_sf(lvl_1)
lvl_1_sf <- st_transform(lvl_1_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_1)
#Ports
p <- "C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts/high-seas-master/geo-data/XYPorts_CM_Cruse_anchorage_world2_final.shp"
ports <- st_read(p)
ports_country <- ports %>%
group_by(ISO3166A3) %>%
summarise(length(LOCODE)) %>%
st_drop_geometry()
gc()
source("R/2.data_preparation.R")
#Number of each mechanism instance (from every reference) (bar chart)
Impacts.nonDD <- Impacts.nonDD %>%
#mutate(Mechanism = stringr::str_replace(Mechanism, "Competition", "Com")) %>%
#mutate(Mechanism = stringr::str_replace(Mechanism, "Predation", "Pre")) %>%
#mutate(Mechanism = stringr::str_replace(Mechanism, "Hybridisation", "Hyb")) %>%
mutate(Mechanism = stringr::str_replace(Mechanism, "Transmission of disease", "Transmission")) %>%
mutate(Mechanism = stringr::str_replace(Mechanism, "Other", "Other")) %>%
mutate(Mechanism = stringr::str_replace(Mechanism, "Interaction with other alien species", "Interaction")) %>%
#mutate(Mechanism = stringr::str_replace(Mechanism, "Herbivory", "Her")) %>%
#mutate(Mechanism = stringr::str_replace(Mechanism, "Parasitism", "Par")) %>%
mutate(Mechanism = stringr::str_replace(Mechanism, "Poisoning/toxicity", "Poison")) %>%
mutate(Mechanism = stringr::str_replace(Mechanism, "Facilitation of native species", "Facilitation")) %>%
mutate(Mechanism = stringr::str_replace(Mechanism, "Chemical/physical/structural impact on ecosystem", "Chemical"))
ImpactMechanism <- Impacts.nonDD %>%
distinct(PubID = PubID, .keep_all = T) %>%
count(Order, Mechanism) %>%
group_by(Mechanism) %>%
add_tally(n, name = "TotalMech") %>%
group_by(Order) %>%
add_tally(n, name = "TotalOrd") %>%
mutate(PropMech = round(n/TotalMech, 2)) %>%
mutate(PropOrd = round(n/TotalOrd, 2)) %>%
rename(NumStudies = "n")
#For bar chart
OrderMech <- ImpactMechanism %>%
dplyr::select(Mechanism, Order, NumStudies)
comp1 <- ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(aes(fill = Order),position = "fill", stat = "identity") +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "right")+#,
#plot.margin = unit(c(1,1,1,1), "cm")) +
scale_y_continuous(expand = c(0,0)) +
xlab("Impact mechanism") +
ylab("Proportion of impact studies") +
scale_fill_manual("Taxonomic\norder", values = pnw_palette("Bay", 13))
comp1
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar()+
facet_wrap(Mechanism)
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar()+
facet_wrap("Mechanism")
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(stat = "identity")+
facet_wrap("Mechanism")
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(stat = "identity")+
facet_wrap("Order")
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_col(stat = "identity")+
facet_wrap("Order")
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(stat = "identity")+
facet_wrap("Order") +
coord_flip()
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(stat = "identity")+
facet_wrap("Order") +
coord_flip() +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "right")
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(stat = "identity")+
facet_wrap("Order") +
coord_flip() +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "right") +
scale_x_continuous(expand = c(0,0)) +
ylab("Impact mechanism") +
xlab("Number of impact studies")
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(stat = "identity")+
facet_wrap("Order") +
coord_flip() +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "right") +
scale_y_continuous(expand = c(0,0)) +
ylab("Impact mechanism") +
xlab("Number of impact studies")
max(OrderMech$NumStudies)
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(stat = "identity")+
facet_wrap("Order") +
coord_flip() +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "right") +
scale_y_continuous(expand = c(0,0),
limits = c(0,180)) +
ylab("Impact mechanism") +
xlab("Number of impact studies")
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(stat = "identity")+
facet_wrap("Order") +
coord_flip() +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "right") +
scale_y_continuous(expand = c(0,0),
limits = c(0,180)) +
ylab("Impact mechanism") +
xlab("Number of impact studies") +
scale_fill_manual("Taxonomic\norder", values = pnw_palette("Bay", 13))
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(aes(fill = Mechanism), stat = "identity")+
facet_wrap("Order") +
coord_flip() +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "right") +
scale_y_continuous(expand = c(0,0),
limits = c(0,180)) +
ylab("Impact mechanism") +
xlab("Number of impact studies")
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(aes(fill = Mechanism), stat = "identity")+
facet_wrap("Order") +
coord_flip() +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "right") +
scale_y_continuous(expand = c(0,0),
limits = c(0,180)) +
ylab("Impact mechanism") +
xlab("Number of impact studies") +
scale_fill_manual("Taxonomic\norder", values = pnw_palette("Bay", 13))
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(aes(fill = Mechanism), stat = "identity")+
facet_wrap("Order") +
coord_flip() +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "none") +
scale_y_continuous(expand = c(0,0),
limits = c(0,180)) +
ylab("Impact mechanism") +
xlab("Number of impact studies") +
scale_fill_manual("Taxonomic\norder", values = pnw_palette("Bay", 13))
ggplot(OrderMech, aes(x = reorder(Mechanism, NumStudies, function(x) -sum(x)), y = NumStudies)) +
geom_bar(aes(fill = Mechanism), stat = "identity")+
facet_wrap("Order") +
coord_flip() +
theme_bw() +
theme(axis.text.y = element_text(colour = "black", size = 14),
axis.text.x = element_text(colour = "black", size = 14, angle = 90, vjust = 0.5),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14),
legend.position = "none") +
scale_y_continuous(expand = c(0,0),
limits = c(0,180)) +
ylab("Impact mechanism") +
xlab("Number of impact studies") +
scale_fill_manual("Taxonomic\norder", values = pnw_palette("Bay", 13))
library(tidyverse)
library(janitor)
library(sf)
library(terra)
library(readxl)
library(tmap)
library(ggpol) #facet_share
library(ggpubr) #balloon plots
library(MASS)
library(PNWColors)
library(ncdf4)
library(lme4)
library(geepack)
library(rstatix)
library(coin)
library(DHARMa)
library(FactoMineR)
library(factoextra)
library(here)
#Package "rms" need
Pool <- read_excel(here("Data", "Species_pool.xlsx"),
sheet = "Pool")
Literature <- read_excel(here("Data", "Assessment_information.xlsx"),
sheet = "Literature_searches")
Impacts <- read_excel(here("Data", "Assessment_information.xlsx"),
sheet = "Assessment_results_input")
Impact_Distribution <- read_excel(here("Data", "Assessment_information.xlsx"),
sheet = "Impact_distribution")
# Obtained from Global Register of Introduced and Invasive Species
#DOI: 10.5281/zenodo.63481164
Insect_Distribution <- read.csv("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts/GRIIS - Country Compendium V1_0.csv") %>%
filter(class == "Insecta")
##Spatial data
#~# Load GADM level 0 shapefile (https://www.gadm.org)
load("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts/lvl_0.RData")
#Convert shapefile to sf object
lvl_0_sf <- st_as_sf(lvl_0)
lvl_0_sf <- st_transform(lvl_0_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_0)
#~# Load GADM level 1 shapefile (https://www.gadm.org)
load("C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts/lvl_1.RData")
#Convert shapefile to sf object
lvl_1_sf <- st_as_sf(lvl_1)
lvl_1_sf <- st_transform(lvl_1_sf, crs = "+proj=moll") #Mollweide projection
rm(lvl_1)
#GDP
# p <- "C:/Users/dcla0008/Dropbox/PhD/Thesis/Data/Chapter 2/Data/Socioeconomic/GDP_per_capita_PPP_1990_2015_v2.nc"
# nc <- nc_open(p)
# lon <- ncvar_get(nc, "longitude")
# lat <- ncvar_get(nc, "latitude")
# gdp <- ncvar_get(nc, "GDP_per_capita_PPP")
# gdp_slice <- gdp[,,26] #Most recent time period
#
# gdpr <- rast(t(gdp_slice),
#              type = "XYZ",
#              crs = "EPSG:4326")
# ext(gdpr) <- c(xmin = min(lon),
#                xmax = max(lon),
#                ymin = min(lat),
#                ymax = max(lat))
# gdpp <- as.polygons(gdpr, values = T)
# gdpp_sf <- st_as_sf(gdpp) %>%
#   st_transform(crs = "+proj=moll")
# lvl_1_gdp <- st_join(gdpp_sf, lvl_1_sf)
# lvl_1_gdp2 <- lvl_1_gdp %>%
#   group_by(GID_0) %>%
#   mutate(Total_gdp = sum(lyr.1))
#Ports
p <- "C:/Users/daclarke@ltu.edu.au/Documents/projects/insect_impacts/high-seas-master/geo-data/XYPorts_CM_Cruse_anchorage_world2_final.shp"
ports <- st_read(p)
ports_country <- ports %>%
group_by(ISO3166A3) %>%
summarise(length(LOCODE)) %>%
st_drop_geometry()
source("R/2.data_preparation.R")
#Minimum set
minset <- Impacts.nonDD %>% dplyr::select(`Order`, `Mechanism`, `Severity`, `Confidence`)
#Multiple correspondence analysis
minsetMCA <- MCA(minset, graph = F)
catMCA <- fviz_mca_var(minsetMCA, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # avoid text overlapping (slow)
ggtheme = theme_minimal(),
title = "")
catMCA
